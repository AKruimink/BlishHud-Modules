name: Integration

on:
  push:
    branches:
      - dev
    paths:
      - 'src/**/*'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: version-bump
  cancel-in-progress: true

jobs:
  build-prerelease:
    name: Bump Version / Create Pull Request
    runs-on: windows-latest
    if: ${{ github.ref == 'refs/heads/dev' && !github.event.pull_request && !startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'
          
      - name: Checkout 'dev'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Projects
        id: detect_changes
        shell: bash
        run: |
          # Detect all changed projects in the push
          CHANGED_PROJECTS=$(git diff --name-only origin/main..HEAD | grep '^src/' | cut -d'/' -f2 | sort -u | uniq)
          echo "CHANGED_PROJECTS=${CHANGED_PROJECTS}" >> $GITHUB_ENV
          echo "::set-output name=changed_projects::${CHANGED_PROJECTS}"

      - name: Detect Dependent BHM Modules
        id: detect_dependents
        shell: bash
        run: |
          touch impacted_projects.txt

          for project in $CHANGED_PROJECTS; do
            if [[ "$project" =~ ^bhms|bhs ]]; then
              # Find all BHM modules referencing this shared project
              grep -l -r "<ProjectReference.*${project}.csproj" src/*/*.csproj | cut -d'/' -f2 >> impacted_projects.txt
            else
              echo $project >> impacted_projects.txt
            fi
          done

          IMPACTED_PROJECTS=$(cat impacted_projects.txt | sort -u)
          echo "IMPACTED_PROJECTS=${IMPACTED_PROJECTS}" >> $GITHUB_ENV
          echo "::set-output name=impacted_projects::${IMPACTED_PROJECTS}"

      - name: (Re-)create branch 'actions/version-bump'
        shell: bash
        run: |
          git branch -D actions/version-bump || true
          git push origin --delete actions/version-bump || true
          git checkout -b actions/version-bump
          git push --set-upstream origin actions/version-bump

      - name: Bump Versions for Impacted Modules
        id: version_bump
        shell: bash
        run: |
          for project in $IMPACTED_PROJECTS; do
            cd src/$project
            
            # Bump version in .csproj
            CURRENT_VERSION=$(grep -oP '(?<=<Version>)[^<]+' $project.csproj)
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF+=1; print}')
            sed -i -E "s#<Version>$CURRENT_VERSION#<Version>$NEW_VERSION#" $project.csproj
            
            # Update manifest.json if it's a BHM module
            if [[ "$project" =~ ^bhm ]]; then
              jq ".version = \"$NEW_VERSION\"" manifest.json > manifest.tmp && mv manifest.tmp manifest.json
            fi
            
            cd -
          done

      - name: Commit version changes
        shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "ci: Version bump for impacted modules" || echo "No changes to commit"

      - name: Push version changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: actions/version-bump

      - name: Update or Create PR 'dev ‚Üê actions/version-bump'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: actions/version-bump
          base: dev
          title: "ü§ñ Version Bump"
          body: |
            The following modules were updated:
            ${{ steps.detect_dependents.outputs.impacted_projects }}
          labels: Version Bump
